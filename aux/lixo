ok ft_printf.c:	str = (char *) malloc(sizeof(char)*ft_strlen(string)+1);
ok ft_round.c:			str = ft_strjoin(str,"0");
ok ft_round.c:			*si = ft_strjoin("1",*si);
ok ft_round.c:				*si = ft_strjoin("1",*si);
ok ftoa.c:		str = ft_strjoin(str,".");
ok ftoa.c:		str = ft_strjoin(str,str_f);
ok ftoa_frac.c:	aux.val = ft_calloc(aux.n,sizeof(int));
ok ftoa_frac.c:	arr.val = ft_calloc(arr.n,sizeof(int));
ok ftoa_int.c:	out = (char *)malloc(n_aux/4 * sizeof(char) + 1);
ok ftoa_int.c:	aux.val = ft_calloc(aux.n,sizeof(int));
ok ftoa_int.c:	arr.val = ft_calloc(arr.n,sizeof(int));
ok trata_d.c:	num = p < 0 ? ft_itoa(-p) : ft_itoa(p);
ok trata_e.c:			*s = ft_strjoin("1",*s);
ok trata_p.c:	num = ft_strjoin("0x",num);
ok trata_s.c:	p = malloc(sizeof(pp)+1);
ok trata_u.c:	num = ft_itoa(p);
ok trata_x.c:	//num = p < 0 ? ft_itoa_base(-p,base) : ft_itoa_base(p,base);
ok utils1.c:	num = ft_itoa_base(p,base);
